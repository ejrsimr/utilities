#!/usr/bin/env python3
# fasta2tab
# print out table of sequences from FASTA file.
# ejr: 2022-10-12
# lmd: 2023-02-22
import fileinput
import signal

###############################################################################
### MAIN 
###############################################################################
def main():
    fh = fileinput.input()

    # this is a bit ugly, but I want it to write line at a time for better 
    # memory use.
    seq = []
    header = ""

    for line in fh:
        line = line.rstrip()
        # starts with handles blank lines better than line[0]
        if (line.startswith(">")):
            # if header is not empty (first time through loop) print it
            if header:
                sequence = ''.join(seq)
                print(header, sequence, sep="\t")
                seq = []
                header = ""
            header = line[1:]
        else:
            seq.append(line)

        # print last sequence
    sequence = ''.join(seq)
    print(header, sequence, sep="\t")

    exit(0)

###############################################################################
### RUN MAIN 
###############################################################################
if __name__ == "__main__":
    # this catches sigpipe errors so you don't get an error message if you tail of head output
    signal.signal(signal.SIGPIPE, signal.SIG_DFL)
    main()